cmake_minimum_required(VERSION 3.18)

project(MyOS2)
ENABLE_LANGUAGE(ASM-ATT C)

if (CMAKE_HOST_APPLE)
    message("Working on MAC : ${CMAKE_SYSTEM_PROCESSOR}\n")
    set (CMAKE_C_COMPILER /opt/local/bin/x86_64-elf-gcc)
    set (CMAKE_ASM-ATT_COMPILER /opt/local/bin/x86_64-elf-as)
    set (CMAKE_C_LINKER /opt/local/bin/x86_64-elf-ld)
endif()

if (${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
    set(ARCH amd64)
elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm64")
    set(ARCH aarch64)
endif()

set(CMAKE_SYSROOT "")
set(CMAKE_ASM_FLAGS "${CMAKE_ASM_FLAGS} --64")
message("ASMFLAGS : ${CMAKE_ASM_FLAGS}")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mcmodel=large -fno-builtin -fno-stack-protector -m64")
message("CFLAGS : ${CMAKE_C_FLAGS}")

INCLUDE_DIRECTORIES(
    ${PROJECT_SOURCE_DIR}/include
)
set(PROJECT_BINARY_DIR ${PROJECT_SOURCE_DIR}/build/bin)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
set(LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
set(ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR})

ADD_SUBDIRECTORY(kernel)